[{"/Users/benthompson/Projects/react-music-player/src/index.js":"1","/Users/benthompson/Projects/react-music-player/src/App.js":"2","/Users/benthompson/Projects/react-music-player/src/reportWebVitals.js":"3","/Users/benthompson/Projects/react-music-player/src/components/Player.js":"4","/Users/benthompson/Projects/react-music-player/src/components/Song.js":"5","/Users/benthompson/Projects/react-music-player/src/components/Library.js":"6","/Users/benthompson/Projects/react-music-player/src/components/LibrarySong.js":"7","/Users/benthompson/Projects/react-music-player/src/components/Nav.js":"8","/Users/benthompson/Projects/react-music-player/src/data.js":"9"},{"size":479,"mtime":1608454056613,"results":"10","hashOfConfig":"11"},{"size":2272,"mtime":1609082022534,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608453695722,"results":"13","hashOfConfig":"11"},{"size":2995,"mtime":1609080249981,"results":"14","hashOfConfig":"11"},{"size":288,"mtime":1608554238603,"results":"15","hashOfConfig":"11"},{"size":701,"mtime":1608754807922,"results":"16","hashOfConfig":"11"},{"size":905,"mtime":1609080512510,"results":"17","hashOfConfig":"11"},{"size":431,"mtime":1608733449635,"results":"18","hashOfConfig":"11"},{"size":2166,"mtime":1609080851943,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qg28p9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/benthompson/Projects/react-music-player/src/index.js",[],["41","42"],"/Users/benthompson/Projects/react-music-player/src/App.js",[],"/Users/benthompson/Projects/react-music-player/src/reportWebVitals.js",[],"/Users/benthompson/Projects/react-music-player/src/components/Player.js",["43","44"],"import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Song from \"./Song\";\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((Song) => Song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{songInfo.duration ? getTime(songInfo.currentTime) : \"0.00\"}</p>\n        <div className=\"track\">\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/benthompson/Projects/react-music-player/src/components/Song.js",[],"/Users/benthompson/Projects/react-music-player/src/components/Library.js",[],"/Users/benthompson/Projects/react-music-player/src/components/LibrarySong.js",[],["45","46"],"/Users/benthompson/Projects/react-music-player/src/components/Nav.js",[],"/Users/benthompson/Projects/react-music-player/src/data.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":37,"column":6,"nodeType":"57","endLine":37,"endColumn":19,"suggestions":"58"},{"ruleId":"47","replacedBy":"59"},{"ruleId":"49","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Song' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["63"],["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"66","text":"67"},[695,708],"[currentSong, setSongs, songs]"]