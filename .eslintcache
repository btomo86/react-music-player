[{"/Users/benthompson/Projects/react-music-player/src/index.js":"1","/Users/benthompson/Projects/react-music-player/src/App.js":"2","/Users/benthompson/Projects/react-music-player/src/reportWebVitals.js":"3","/Users/benthompson/Projects/react-music-player/src/components/Player.js":"4","/Users/benthompson/Projects/react-music-player/src/components/Song.js":"5","/Users/benthompson/Projects/react-music-player/src/util.js":"6"},{"size":479,"mtime":1608454056613,"results":"7","hashOfConfig":"8"},{"size":593,"mtime":1608531153547,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608453695722,"results":"10","hashOfConfig":"8"},{"size":2038,"mtime":1608554441811,"results":"11","hashOfConfig":"8"},{"size":288,"mtime":1608554238603,"results":"12","hashOfConfig":"8"},{"size":1840,"mtime":1608470173699,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qg28p9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/benthompson/Projects/react-music-player/src/index.js",[],["28","29"],"/Users/benthompson/Projects/react-music-player/src/App.js",["30","31"],"import React, { useState } from \"react\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport \"./styles/app.scss\";\nimport data from \"./util\";\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  return (\n    <div className=\"App\">\n      <Song currentSong={currentSong} />\n      <Player\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/benthompson/Projects/react-music-player/src/reportWebVitals.js",[],"/Users/benthompson/Projects/react-music-player/src/components/Player.js",[],"/Users/benthompson/Projects/react-music-player/src/components/Song.js",[],"/Users/benthompson/Projects/react-music-player/src/util.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":8,"column":17,"nodeType":"38","messageId":"39","endLine":8,"endColumn":25},{"ruleId":"36","severity":1,"message":"40","line":9,"column":23,"nodeType":"38","messageId":"39","endLine":9,"endColumn":37},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'setSongs' is assigned a value but never used.","Identifier","unusedVar","'setCurrentSong' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]